# Generated by Django 3.1 on 2021-01-17 20:11

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(help_text='Номер счета или название', max_length=255)),
                ('description', models.TextField(blank=True, help_text='Описание', null=True)),
                ('amount', models.FloatField(default=0, help_text='Итоговая сумма')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CorpBound',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(help_text='Полное наименование', max_length=255)),
                ('short_name', models.CharField(help_text='Сокращенное наименование', max_length=255)),
                ('isin', models.CharField(help_text='ISIN', max_length=50)),
                ('last_price', models.FloatField(blank=True, help_text='Цена последней сделки', null=True)),
                ('assessed_return', models.FloatField(blank=True, help_text='Доход оценочный в %', null=True)),
                ('maturity_date', models.DateTimeField(help_text='Дата погашения')),
                ('coupon_date_return', models.DateTimeField(blank=True, help_text='Ближайшая дата выплаты купона', null=True)),
                ('coupon_price', models.FloatField(blank=True, help_text='Размер купона', null=True)),
                ('capitalization', models.IntegerField(blank=True, help_text='Оборот', null=True)),
                ('coupon_duration', models.IntegerField(blank=True, help_text='Длительность купона', null=True)),
                ('listing', models.IntegerField(choices=[(1, 1), (2, 2), (3, 3)], help_text='Листинг')),
                ('demand_volume', models.IntegerField(blank=True, help_text='Общий спрос', null=True)),
                ('duration', models.FloatField(blank=True, help_text='Дюрация', null=True)),
                ('nkd', models.FloatField(help_text='НКД')),
                ('tax_free', models.BooleanField(help_text='Свободна от уплаты налогов')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Template',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('description', models.TextField()),
                ('url', models.URLField()),
                ('key', models.CharField(max_length=25)),
            ],
        ),
        migrations.CreateModel(
            name='Transfer',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('date_of_application', models.DateTimeField(blank=True, help_text='Дата подачи поручения', null=True)),
                ('execution_date', models.DateTimeField(blank=True, help_text='Дата исполнения поручения', null=True)),
                ('type', models.CharField(help_text='Операция', max_length=50)),
                ('sum', models.FloatField(help_text='Сумма')),
                ('currency', models.CharField(help_text='Валюта', max_length=5)),
                ('description', models.CharField(blank=True, help_text='Содержание операции', max_length=255, null=True)),
                ('status', models.CharField(help_text='Статус', max_length=50)),
                ('account_charge', models.ForeignKey(blank=True, help_text='Списание с', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='account_charge', to='assets.account')),
                ('account_income', models.ForeignKey(help_text='Зачисление на', on_delete=django.db.models.deletion.CASCADE, related_name='account_income', to='assets.account')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Portfolio',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('buycloseprice', models.FloatField(blank=True, help_text='Цена закрытия в дату покупки, в рублях', null=True)),
                ('buysum', models.FloatField(blank=True, help_text='Сумма покупки', null=True)),
                ('cashflow', models.FloatField(blank=True, help_text='Купоны/ дивиденды', null=True)),
                ('earnings', models.FloatField(blank=True, help_text='Доход', null=True)),
                ('error', models.TextField(blank=True, null=True)),
                ('from_date', models.DateField(blank=True, help_text='Дата покупки', null=True)),
                ('secid', models.CharField(help_text='Инструмент', max_length=255)),
                ('sellcloseprice', models.FloatField(blank=True, help_text='Цена закрытия в дату продажи, в рублях', null=True)),
                ('sellsum', models.FloatField(blank=True, help_text='Сумма продажи', null=True)),
                ('till_date', models.DateField(blank=True, help_text='Дата продажи', null=True)),
                ('volume', models.IntegerField(blank=True, help_text='Количество бумаг', null=True)),
                ('yield_percent', models.FloatField(blank=True, help_text='Внутр. ставка доходности', null=True)),
                ('account', models.ForeignKey(help_text='Аккаунт', on_delete=django.db.models.deletion.CASCADE, related_name='account', to='assets.account')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Deal',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('number', models.CharField(help_text='Номер сделки', max_length=50)),
                ('conclusion_date', models.DateTimeField(help_text='Дата заключения')),
                ('settlement_date', models.DateTimeField(help_text='Дата расчётов')),
                ('isin', models.CharField(help_text='Код финансового инструмента', max_length=50)),
                ('type', models.CharField(choices=[('Покупка', 'Покупка'), ('Продажа', 'Продажа')], help_text='Операция', max_length=50)),
                ('amount', models.IntegerField(help_text='Количество')),
                ('price', models.FloatField(help_text='Цена')),
                ('nkd', models.FloatField(help_text='НКД')),
                ('volume', models.FloatField(help_text='Объём сделки')),
                ('currency', models.CharField(help_text='Валюта', max_length=10)),
                ('service_fee', models.FloatField(help_text='Комиссия')),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assets.account')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Asset',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('full_name', models.CharField(max_length=255)),
                ('short_name', models.CharField(blank=True, max_length=50, null=True)),
                ('isin', models.CharField(max_length=50)),
                ('current_price', models.FloatField()),
                ('buying_price', models.FloatField()),
                ('current_return', models.FloatField()),
                ('buying_return', models.FloatField()),
                ('account', models.ManyToManyField(to='assets.Account')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AccountReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('asset_estimate', models.JSONField()),
                ('iis_income', models.JSONField()),
                ('portfolio', models.JSONField()),
                ('money_flow', models.JSONField()),
                ('tax', models.JSONField()),
                ('handbook', models.JSONField()),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='assets.account')),
            ],
        ),
        migrations.AddConstraint(
            model_name='accountreport',
            constraint=models.UniqueConstraint(fields=('start_date', 'end_date', 'account_id'), name='unique_report'),
        ),
    ]

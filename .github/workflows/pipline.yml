name: CI

on:
  push:
    branches:
      - master

jobs:

  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:11
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports: ['5432:5432']
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

      redis:
        # Docker Hub image
        image: redis
        # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps port 6379 on service container to the host
          - 6379:6379

    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1

      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8

      - uses: actions/cache@v1
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pipenv
          python -m pipenv install --system --deploy --ignore-pipfile

      - name: Run Tests
        env:
          SECRET_KEY: 123
          DEBUG: 0
          DB_NAME: postgres
          DB_USERNAME: postgres
          DB_PASSWORD: postgres
          DB_HOSTNAME: localhost
          DB_ENGINE: django.db.backends.postgresql
          DB_PORT: 5432
          REDIS_URL: redis://localhost:6379
        run: |
          python manage.py collectstatic --settings=baa.settings.development
          python manage.py test --settings=baa.settings.development

  docker:
    name: Docker
    runs-on: ubuntu-latest
    environment: production
    needs: test

    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/baa-service:latest
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

  aws:
    name: AWS
    runs-on: ubuntu-latest
    environment: production
    needs: docker
    env:
      AWS_REGION: us-west-1

    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Force deployment
        run: |
          aws ecs update-service --cluster production-cluster --service production-service --force-new-deployment
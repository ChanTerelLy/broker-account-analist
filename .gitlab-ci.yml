variables:
  TF_ROOT: terraform
  SAM_ROOT: serverless
  AUTO_BUILD_IMAGE_VERSION: v1.0.0
  AUTO_DEVOPS_PLATFORM_TARGET: ECS
.pre:
   only:
    refs:
      - master

stages:
- ".pre"
- build
- test
- deploy
- ".post"

deploy_sam:
  image: python:3.8
  stage: build
  before_script:
    - python -V               # Print out python version for debugging
    - pip install virtualenv
    - virtualenv venv
    - source venv/bin/activate
    - pip3 install awscli --upgrade
    - pip3 install aws-sam-cli --upgrade

  cache:
    paths:
      - .cache/pip
      - venv/
  script:
    - pip3 install -r moex/requirements.txt
    - python3 -m unittest discover moex/tests
    - cd $SAM_ROOT
    - sam build
    - sam deploy --no-fail-on-empty-changeset --config-file $SAMCONFIG


build:
  image: docker:19.03.12
  services:
    - docker:19.03.12-dind
  variables:
    DOCKER_HOST: tcp://docker:2376
    DOCKER_TLS_CERTDIR: "/certs"
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  stage: build
  script:
    - docker pull $CI_REGISTRY_IMAGE:latest || true
    - docker build --cache-from $CI_REGISTRY_IMAGE:latest --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA --tag $CI_REGISTRY_IMAGE:latest .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    - docker push $CI_REGISTRY_IMAGE:latest

test:
  only:
    - master
  variables:
    POSTGRES_DB: $POSTGRES_DB
    POSTGRES_USER: $POSTGRES_USER
    POSTGRES_PASSWORD: $POSTGRES_PASSWORD
    POSTGRES_HOST_AUTH_METHOD: trust
    DB_NAME: $POSTGRES_DB
    DB_USERNAME: $POSTGRES_USER
    DB_PASSWORD: $POSTGRES_PASSWORD
    DB_HOSTNAME: postgres
    DB_PORT: 5432
    SECRET_KEY: 123
    DEBUG: 0
    DB_ENGINE: django.db.backends.postgresql
    REDIS_URL: redis://redis:6379
  image: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
  services:
  - postgres:12.7
  - redis:6.0
  script:
    - python manage.py collectstatic --settings=baa.settings.development
    - python manage.py migrate --settings=baa.settings.development
    - python manage.py test --settings=baa.settings.development

deploy:
  image: registry.gitlab.com/gitlab-org/cloud-deploy/aws-ecs:latest
  dependencies: []
  script:
  - ecs update-task-definition
  stage: deploy
  environment:
    name: production